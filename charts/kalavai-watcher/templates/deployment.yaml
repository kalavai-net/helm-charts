apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-watcher-api
  namespace: kalavai
spec:
  replicas: 1 # ensure there is minimal downtime if node goes down
  selector:
    matchLabels:
      app: kube-watcher-api
  template:
    metadata:
      labels:
        app: kube-watcher-api
    spec:
      containers:
      - name: kube-watcher-api
        image: bundenth/kube_watcher:v54
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 8000
        env:
        - name: PROMETHEUS_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: config-data
              key: prometheus-url
        - name: OPENCOST_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: config-data
              key: opencost-url
        - name: IN_CLUSTER
          value: "True"
        - name: KW_USE_AUTH
          value: "True"
        - name: KW_MASTER_KEY
          value: "CARLOS_ANNIE_ADAM_KALAVAI"
        - name: ANVIL_UPLINK_KEY
          value: "client_AOPKTWK227ZV3R4ENTMOQRIY-ADMVMYW5OIRPH75P"
        - name: CLUSTER_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: config-data
              key: cluster-endpoint
        - name: CLUSTER_TOKEN
          valueFrom:
            secretKeyRef:
              name: config-data
              key: cluster-token
        livenessProbe:
          httpGet:
            path: /v1/health
            port: 8000
          initialDelaySeconds: 20
          periodSeconds: 30
      serviceAccountName: api-service-account  # Service account with cluster permissions