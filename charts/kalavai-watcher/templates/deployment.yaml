apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-watcher-api
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.deployment.replicas }} # ensure there is minimal downtime if node goes down
  selector:
    matchLabels:
      app: kube-watcher-api
  template:
    metadata:
      labels:
        app: kube-watcher-api
    spec:
    {{ if .Values.deployment.nodeSelector }}
      nodeSelector:
      {{- range $name,$value := .Values.deployment.nodeSelector }}
        {{$name}}: {{$value}}
      {{- end }}
    {{ end }}
      containers:
      - name: kube-watcher-api
        image: bundenth/kube-watcher:{{ .Values.image_tag }}
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 8000
        env:
        - name: IN_CLUSTER
          value: "{{ .Values.deployment.in_cluster }}"
        - name: KALAVAI_USER_KEY
          value: "{{ .Values.deployment.kalavai_username_key }}"
        - name: KW_USE_AUTH
          value: "{{ .Values.deployment.use_auth_key }}"
        - name: KW_ADMIN_KEY
          value: {{ .Values.deployment.admin_key }}
        - name: KW_WRITE_KEY
          value: {{ .Values.deployment.write_key }}
        - name: KW_READ_ONLY_KEY
          value: {{ .Values.deployment.readonly_key }}
        - name: IS_SHARED_POOL
          value: "{{ .Values.deployment.is_shared_pool }}"
        - name: ALLOW_UNREGISTERED_USER
          value: "{{ .Values.deployment.allow_unregistered_user }}"
        - name: KALAVAI_API_ENDPOINT
          value: {{ .Values.deployment.kalavai_api_endpoint }}
        - name: PROMETHEUS_ENDPOINT
          value: {{ .Values.deployment.prometheus_endpoint }}
        - name: OPENCOST_ENDPOINT
          value: {{ .Values.deployment.opencost_endpoint }}
        - name: LONGHORN_MANAGER_ENDPOINT
          value: {{ .Values.deployment.longhorn_manager_endpoint }}
        livenessProbe:
          httpGet:
            path: /v1/health
            port: 8000
          initialDelaySeconds: 20
          periodSeconds: 30
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpus }}
            memory: {{ .Values.resources.requests.memory }}Gi
          limits:
            cpu: {{ .Values.resources.limits.cpus }}
            memory: {{ .Values.resources.limits.memory }}Gi
      serviceAccountName: api-service-account  # Service account with cluster permissions