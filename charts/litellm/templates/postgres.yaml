apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-volume-claim
  namespace: {{ .Release.Namespace }}
  labels:
    app: postgres
spec:
  storageClassName: {{ .Values.postgres.storage_class.storage_class_name }}
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.postgres.storage_class.storage_size }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: 'postgres:14'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
          - name: POSTGRES_DB
            value: {{ .Values.postgres.db_name }}
          - name: POSTGRES_USER
            value: {{ .Values.postgres.db_user }}
          - name: POSTGRES_PASSWORD
            value: {{ .Values.postgres.db_password }}
          volumeMounts:
            - mountPath: /var/lib/postgresql
              name: postgresdata
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: postgres-volume-claim
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: {{ .Release.Namespace }}
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
    - port: 5432
      nodePort: {{ .Values.postgres.service.node_port }}
  selector:
    app: postgres